install.packages("shiny")
library(shiny)
runExample("01_hello")
1+1
5+9
install.packages("KernSmooth")
library(KernSmooth)
packageDescription("KernSmooth")
install.packages("KernSmoothIRT")
libraryDescription("KernSmooth")
install.packages("KernSmooth")
libraryDescription("KernSmooth")
a <- KernSmooth
install.packages("KernSmooth")
packageDescription("KernSmooth")
library(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
a <- available.packages()
head(rowname(a), 3)
head(rownames(a), 3)
packageDescription("KernSmooth")
packageDescription("KernSmooth")
packageDescription("KernSmooth")
install.packages("KernSmooth")
packageDescription("KernSmooth")
library(KernSmooth)
packageDescription("KernSmooth")
library(KernSmooth)
plot(mars$Date, mars$Declination)
## This is a markdown file
quantile(Declination)
import mars
?quantile
plot(Date, Declination)
find("dotplot")
library(lattice)
install.packages("gam")
packages
library()
library(gam)
install.packages("mars")
mad
gam
stats
tools
library(stats)
stats
R CMD INSTALL packages
search()
install.packages("swirl")
library("swirl")
swirl()
source('~/homework/Data Science/R-Programming/w2/functions.R')
cube(3)
source('~/homework/Data Science/R-Programming/w2/functions.R')
source('~/homework/Data Science/R-Programming/w2/functions.R')
source('~/homework/Data Science/R-Programming/w2/functions.R')
x<-1:10
x
if(x>5)
x
length(x)
source('~/homework/Data Science/R-Programming/w2/functions.R')
x <- 5
if(x>5){
x <- 0
x
}
x
x <- 6
if(x>5){
x <- 0
x
}
x
source('~/homework/Data Science/R-Programming/w2/functions.R')
z <-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x
source('~/homework/Data Science/R-Programming/w2/functions.R')
h(2)
h(2L)
x
source('~/homework/Data Science/R-Programming/w3/w3.R')
x
x
y
y
y
source('~/homework/Data Science/R-Programming/w3/w3.R')
x
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
install.packages("dplyr")
install.packages("BH")
install.packages("BH")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
cannot open compressed file 'BH/DESCRIPTION', probable reason 'No such file or directory'
install.packages("dplyr")
q()
library(swirl)
swirl()
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(n)
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
.6
(5,x)*(.8)^x*(.2)^(5-x)
(5,5)*(.8)^5*(.2)^(5-5)
d
x
info()
skip()
ds
pbinom(2,5,)
?pbinom
pbinom(2,5,.8, lower.tail = FALSE)
qnorm(prob)
qnorm(10)
qnorm(.1)
-1.28
0
qnorm(.975)
qnorm(.975,mean=3,sd=2)
1.96 +2 +3
1.96*2 + 3
?pnorm
pnorm(1200, 1020, 50, lower.tail = FALSE)
pnorm(1200, lower.tail = FALSE)
pnorm((1200-1020)/50,lower.tail=FALSE)
qnorm(.75, 1020, 50, lower.tail = FALSE)
qnorm(.75, 1020, 50, lower.tail = TRUE)
pnorm(qnorm(.53))
qnorm(pnorm(.53))
ppois(3, 2.5)
ppois(3,2.5 * 4)
pbinom(5, 1000, .01)
ppois(5, 1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(.95)
p'+c(-1,1).
p'+/- qnorm(.975)*sqrt(p'(1-p')/100)
skip()
dsf
x$conf.int
60$conf.int
x$conf.60
60$conf.100
skip
binom.test(60,100)$conf.int
mywald
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(est
var)
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/2)
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/t)
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5, 94.32)
poisson.test(5,94.32)$conf
myplot(2)
myplot(20)
myplot2(2)
qt(.975, 2)
myplot2(20)
sleep
range(g1)
range(g2)
g2-g1
difference < g2-g1
difference <- g2-g1
mean(difference)
s <- sd(difference)
qt
qt(.95, 10-1)
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test()
t.test(10)
t.test( x$conf.int)
x$conf.int
skip()
sp <- (n_x-1)(S_x)^2+(n_y-1)(S_y)^2
sp <- (21_x-1)(S_x)^2+(21_y-1)(S_y)^2
skip()
ns
ns <- d
skip()
sp/ns
sp <- sqrt(sp/ns)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
mydf
mydf <- num/den
qt(.975, mydf)
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
sleep(100)
skip()
z
2/1
skip()
skip()
skip()
dim(x)
dim(fs)
skip()
11.7885 *
| sd(fs$sheight-fs$fheight)/sqrt(1078)
skip()
mybin
mybin[4]
mybin[7]=.144
mybin[7]=.144 and mybin[8]=.035
skip()
skip()
qnorm(.95)
qnorm(.99)
skip(0)
skip()
skip()
mybin
pbinom(7,8,.5)
pbinom(6,size=8,prob=.5,lower.tail=FALSE)
skip()
skip()
skip()
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
12
24/500
FWER
skip()
skip()
skip()
print(g2)
head
head(sh)
len(sh)
nh
summary(resampledMedians)
median(resampledMedians)
skip()
fh
sam <- sample(fh,nh*B,replace=TRUE)
resam
skip()
skip()
median(fh) - median(meds)
skip()
skip()
skip()
skip()
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
Cdata
range(Cdata$count)
skip()
skip()
skip()
skip()
skip()
skip()
group
sample(group)
sample(group)
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
perms > obs
mean(perms>obs)
skip()
skip()
install.packages("UsingR")
data(mtcars)
mtcars
str(mtcars)
?mtcars
str(mtcars$mpg)
str(mtcars$cyl)
sessionInfo()
Sys.which("pdflatex")
Sys.getenv("PATH")
devtools::install_github("rstudio/rmarkdown")
install.packages(c("RCurl","pander","RJSONIO"))
render('test1.Rmd',pdf_document())
library(swirl)
swirl()
lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals^2/n-2))
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum(mean(galton$child)^2)
sTot <- sum((galton$child-mu)^2)
SReS <- deviance(sum(fit$residuals^2))
SReS <- deviance(sum(fit$residuals)^2)
SReS <- deviance(sum(fit$residuals))
SReS <- sum(fit$residuals)^2
sRes <- deviance(fit)
1- (sRes/sTot)
1-sRes/sTot
summary(fit)$r.squared
summary(fit)$cor
cor(galton$parent,galton$child)^2
ones
| <- rep(1, nrow(galton))
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
View(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees
)
trees2 <- eliminate("Girth", trees)
View(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
setwd("~/homework/Data Science/Practical Machine Learning/Course Project")
